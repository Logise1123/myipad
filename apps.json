[
  {
    "name": "Notas",
    "description": "Una app simple y elegante para tomar notas.",
    "content": "<!DOCTYPE html>\\n<html lang=\\\"es\\\">\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n    <title>Notas</title>\\n    <script src=\\\"https://cdn.tailwindcss.com\\\"></script>\\n    <link rel=\\\"preconnect\\\" href=\\\"https://fonts.googleapis.com\\\">\\n    <link rel=\\\"preconnect\\\" href=\\\"https://fonts.gstatic.com\\\" crossorigin>\\n    <link href=\\\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\\\" rel=\\\"stylesheet\\\">\\n    <style>\\n        body {\\n            font-family: 'Inter', -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif;\\n            -webkit-font-smoothing: antialiased;\\n            -moz-osx-font-smoothing: grayscale;\\n        }\\n        .note-item.active {\\n            background-color: #fef08a; /* yellow-200 */\\n        }\\n    </style>\\n</head>\\n<body class=\\\"bg-gray-100\\\">\\n    <div class=\\\"flex h-screen\\\">\\n        <!-- Sidebar de Notas -->\\n        <aside class=\\\"w-1/3 max-w-xs bg-white border-r border-gray-200 flex flex-col\\\">\\n            <div class=\\\"p-4 border-b border-gray-200 flex justify-between items-center\\\">\\n                <h1 class=\\\"text-2xl font-bold text-gray-800\\\">Notas</h1>\\n                <button id=\\\"new-note-btn\\\" class=\\\"text-gray-600 hover:text-blue-500\\\">\\n                    <svg class=\\\"w-6 h-6\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\" d=\\\"M12 6v6m0 0v6m0-6h6m-6 0H6\\\"></path></svg>\\n                </button>\\n            </div>\\n            <div id=\\\"notes-list-container\\\" class=\\\"p-2 overflow-y-auto flex-1\\\">\\n                <!-- La lista de notas se generará aquí -->\\n            </div>\\n             <div class=\\\"p-2 border-t border-gray-200\\\">\\n                <button id=\\\"delete-note-btn\\\" class=\\\"w-full text-red-500 hover:text-red-700 font-semibold py-2 px-4 rounded-lg text-sm text-center disabled:opacity-50 disabled:cursor-not-allowed\\\" disabled>\\n                    Eliminar Nota\\n                </button>\\n            </div>\\n        </aside>\\n\\n        <!-- Contenido de la Nota -->\\n        <main class=\\\"flex-1 p-6\\\">\\n            <div class=\\\"w-full h-full\\\">\\n                <textarea id=\\\"note-content\\\" class=\\\"w-full h-full p-4 text-lg bg-transparent focus:outline-none resize-none text-gray-800\\\" placeholder=\\\"Crea una nueva nota o selecciona una existente.\\\"></textarea>\\n            </div>\\n        </main>\\n    </div>\\n\\n    <script>\\n        const notesListContainer = document.getElementById('notes-list-container')\\n        const noteContent = document.getElementById('note-content')\\n        const newNoteBtn = document.getElementById('new-note-btn')\\n        const deleteNoteBtn = document.getElementById('delete-note-btn')\\n\\n        let notes = []\\n        let activeNoteId = null\\n\\n        // Cargar notas desde localStorage\\n        function loadNotes() {\\n            const savedNotes = localStorage.getItem('notes-app-data')\\n            if (savedNotes) {\\n                notes = JSON.parse(savedNotes)\\n            }\\n            renderNotesList()\\n        }\\n\\n        // Guardar notas en localStorage\\n        function saveNotes() {\\n            localStorage.setItem('notes-app-data', JSON.stringify(notes))\\n        }\\n\\n        // Renderizar la lista de notas\\n        function renderNotesList() {\\n            notesListContainer.innerHTML = ''\\n            if (notes.length === 0) {\\n                notesListContainer.innerHTML = '<p class=\\\"text-center text-gray-500 p-4\\\">No hay notas.</p>'\\n            } else {\\n                notes.forEach(note => {\\n                    const noteElement = document.createElement('div')\\n                    noteElement.className = 'note-item p-3 rounded-lg hover:bg-gray-200 cursor-pointer mt-1 ' + (note.id === activeNoteId ? 'active' : '')\\n                    noteElement.dataset.id = note.id\\n                    \\n                    const title = note.content.split('\\\\n')[0] || 'Nueva Nota'\\n                    const preview = note.content.substring(title.length).trim().split('\\\\n')[0] || 'Sin contenido adicional'\\n\\n                    noteElement.innerHTML = '<h2 class=\\\"font-semibold text-gray-900 truncate\\\">' + title + '</h2>' + '<p class=\\\"text-sm text-gray-600 truncate\\\">' + preview + '</p>'\\n                    noteElement.addEventListener('click', () => selectNote(note.id))\\n                    notesListContainer.appendChild(noteElement)\\n                })\\n            }\\n        }\\n\\n        // Seleccionar una nota\\n        function selectNote(id) {\\n            activeNoteId = id\\n            const activeNote = notes.find(note => note.id === id)\\n            if (activeNote) {\\n                noteContent.value = activeNote.content\\n                noteContent.disabled = false\\n                deleteNoteBtn.disabled = false\\n            }\\n            renderNotesList()\\n        }\\n\\n        // Crear una nueva nota\\n        newNoteBtn.addEventListener('click', () => {\\n            const newNote = {\\n                id: Date.now().toString(),\\n                content: ''\\n            }\\n            notes.unshift(newNote)\\n            activeNoteId = newNote.id\\n            saveNotes()\\n            renderNotesList()\\n            noteContent.value = ''\\n            noteContent.disabled = false\\n            noteContent.focus()\\n            deleteNoteBtn.disabled = false\\n        })\\n        \\n        // Eliminar una nota\\n        deleteNoteBtn.addEventListener('click', () => {\\n            if (!activeNoteId) return\\n            notes = notes.filter(note => note.id !== activeNoteId)\\n            activeNoteId = null\\n            noteContent.value = ''\\n            noteContent.disabled = true\\n            deleteNoteBtn.disabled = true\\n            saveNotes()\\n            renderNotesList()\\n        })\\n\\n        // Guardar contenido de la nota al escribir\\n        noteContent.addEventListener('input', () => {\\n            if (!activeNoteId) return\\n            const activeNote = notes.find(note => note.id === activeNoteId)\\n            if (activeNote) {\\n                activeNote.content = noteContent.value\\n                saveNotes()\\n                // Re-render para actualizar el título/preview en tiempo real\\n                renderNotesList()\\n            }\\n        })\\n\\n        // Carga inicial\\n        loadNotes()\\n        noteContent.disabled = true\\n    </script>\\n</body>\\n</html>\\n"
  },
  {
    "name": "Clima",
    "description": "Consulta el tiempo en tu ubicación actual.",
    "content": "<!DOCTYPE html>\\n<html lang=\\\"es\\\">\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n    <title>Clima</title>\\n    <script src=\\\"https://cdn.tailwindcss.com\\\"></script>\\n    <link rel=\\\"preconnect\\\" href=\\\"https://fonts.googleapis.com\\\">\\n    <link rel=\\\"preconnect\\\" href=\\\"https://fonts.gstatic.com\\\" crossorigin>\\n    <link href=\\\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;700&display=swap\\\" rel=\\\"stylesheet\\\">\\n    <style>\\n        body {\\n            font-family: 'Inter', -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif;\\n            background: linear-gradient(to bottom, #6DD5FA, #2980B9);\\n        }\\n        .text-shadow { text-shadow: 0 2px 4px rgba(0,0,0,0.1); }\\n        .hidden { display: none; }\\n    </style>\\n</head>\\n<body class=\\\"text-white flex items-center justify-center h-screen p-4\\\">\\n    <div id=\\\"weather-container\\\" class=\\\"w-full max-w-4xl p-8 rounded-2xl bg-white/20 backdrop-blur-lg hidden\\\">\\n        <!-- Cabecera -->\\n        <div class=\\\"text-center mb-8\\\">\\n            <h1 id=\\\"city\\\" class=\\\"text-4xl font-bold text-shadow\\\">--</h1>\\n            <p id=\\\"temperature\\\" class=\\\"text-8xl font-thin tracking-tighter text-shadow\\\">-°</p>\\n            <p id=\\\"description\\\" class=\\\"text-xl opacity-90 text-shadow\\\">--</p>\\n            <p id=\\\"temp-range\\\" class=\\\"text-lg opacity-80 text-shadow\\\">Máx: -° Mín: -°</p>\\n        </div>\\n    </div>\\n    <div id=\\\"loading-container\\\" class=\\\"text-center\\\">\\n        <h2 id=\\\"loading-message\\\" class=\\\"text-2xl font-semibold\\\">Obteniendo tu ubicación...</h2>\\n    </div>\\n\\n    <script>\\n        const weatherContainer = document.getElementById('weather-container')\\n        const loadingContainer = document.getElementById('loading-container')\\n        const loadingMessage = document.getElementById('loading-message')\\n        \\n        window.addEventListener('load', () => {\\n            loadingMessage.textContent = 'Obteniendo tu ubicación...'\\n            fetch('https://ipapi.co/json/')\\n                .then(response => {\\n                    if (!response.ok) {\\n                        throw new Error('Respuesta de red no fue ok')\\n                    }\\n                    return response.json()\\n                })\\n                .then(locationData => {\\n                    loadingMessage.textContent = 'Cargando datos del clima...'\\n                    const { latitude, longitude, city } = locationData\\n                    const weatherApiUrl = 'https://api.open-meteo.com/v1/forecast?latitude=' + latitude + '&longitude=' + longitude + '&current_weather=true&daily=temperature_2m_max,temperature_2m_min&timezone=auto'\\n                    return fetch(weatherApiUrl).then(response => response.json()).then(weatherData => {\\n                        displayWeatherData(weatherData, city)\\n                    })\\n                })\\n                .catch(error => {\\n                    console.error('Error:', error)\\n                    showError(\\\"No se pudo obtener la información de ubicación o clima.\\\")\\n                })\\n        })\\n\\n        function showError(message) {\\n            loadingMessage.textContent = message\\n            loadingMessage.classList.add('text-red-300')\\n            weatherContainer.classList.add('hidden')\\n            loadingContainer.classList.remove('hidden')\\n        }\\n\\n        function getWeatherDescription(code) {\\n            const descriptions = {\\n                0: 'Cielo despejado',\\n                1: 'Principalmente despejado',\\n                2: 'Parcialmente nublado',\\n                3: 'Nublado',\\n                45: 'Niebla',\\n                48: 'Niebla con escarcha',\\n                51: 'Llovizna ligera',\\n                53: 'Llovizna moderada',\\n                55: 'Llovizna densa',\\n                61: 'Lluvia ligera',\\n                63: 'Lluvia moderada',\\n                65: 'Lluvia fuerte',\\n                80: 'Chubascos ligeros',\\n                81: 'Chubascos moderados',\\n                82: 'Chubascos violentos',\\n                95: 'Tormenta eléctrica'\\n            }\\n            return descriptions[code] || 'Condición desconocida'\\n        }\\n\\n        function displayWeatherData(weather, city) {\\n            document.getElementById('city').textContent = city || 'Ubicación desconocida'\\n            document.getElementById('temperature').textContent = Math.round(weather.current_weather.temperature) + '°'\\n            document.getElementById('description').textContent = getWeatherDescription(weather.current_weather.weathercode)\\n            document.getElementById('temp-range').textContent = 'Máx: ' + Math.round(weather.daily.temperature_2m_max[0]) + '° Mín: ' + Math.round(weather.daily.temperature_2m_min[0]) + '°'\\n\\n            loadingContainer.classList.add('hidden')\\n            weatherContainer.classList.remove('hidden')\\n        }\\n    </script>\\n</body>\\n</html>\\n"
  },
  {
    "name": "Calculadora",
    "description": "Una calculadora para operaciones básicas y científicas.",
    "content": "<!DOCTYPE html>\\n<html lang=\\\"es\\\">\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n    <title>Calculadora</title>\\n    <script src=\\\"https://cdn.tailwindcss.com\\\"></script>\\n    <link rel=\\\"preconnect\\\" href=\\\"https://fonts.googleapis.com\\\">\\n    <link rel=\\\"preconnect\\\" href=\\\"https://fonts.gstatic.com\\\" crossorigin>\\n    <link href=\\\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500&display=swap\\\" rel=\\\"stylesheet\\\">\\n    <style>\\n        body { font-family: 'Inter', sans-serif; }\\n        .calc-btn {\\n            @apply bg-gray-700 text-white text-3xl font-medium rounded-full flex items-center justify-center aspect-square transition-colors duration-150 select-none;\\n        }\\n        .calc-btn:active { @apply bg-gray-500; }\\n        .calc-btn.light { @apply bg-gray-400 text-black; }\\n        .calc-btn.light:active { @apply bg-gray-300; }\\n        .calc-btn.orange { @apply bg-orange-500 text-white; }\\n        .calc-btn.orange:active { @apply bg-orange-400; }\\n    </style>\\n</head>\\n<body class=\\\"bg-black flex items-center justify-center h-screen\\\">\\n    <div class=\\\"w-full max-w-sm p-4 space-y-4\\\">\\n        <!-- Pantalla -->\\n        <div id=\\\"display\\\" class=\\\"text-right text-white text-8xl font-light pr-4 mb-4 break-all\\\">0</div>\\n        <!-- Botones -->\\n        <div class=\\\"grid grid-cols-4 gap-3\\\">\\n            <button class=\\\"calc-btn light\\\" data-action=\\\"clear\\\">AC</button>\\n            <button class=\\\"calc-btn light\\\" data-action=\\\"negate\\\">+/-</button>\\n            <button class=\\\"calc-btn light\\\" data-action=\\\"percentage\\\">%</button>\\n            <button class=\\\"calc-btn orange\\\" data-action=\\\"operator\\\" data-value=\\\"divide\\\">÷</button>\\n\\n            <button class=\\\"calc-btn\\\" data-action=\\\"number\\\" data-value=\\\"7\\\">7</button>\\n            <button class=\\\"calc-btn\\\" data-action=\\\"number\\\" data-value=\\\"8\\\">8</button>\\n            <button class=\\\"calc-btn\\\" data-action=\\\"number\\\" data-value=\\\"9\\\">9</button>\\n            <button class=\\\"calc-btn orange\\\" data-action=\\\"operator\\\" data-value=\\\"multiply\\\">×</button>\\n\\n            <button class=\\\"calc-btn\\\" data-action=\\\"number\\\" data-value=\\\"4\\\">4</button>\\n            <button class=\\\"calc-btn\\\" data-action=\\\"number\\\" data-value=\\\"5\\\">5</button>\\n            <button class=\\\"calc-btn\\\" data-action=\\\"number\\\" data-value=\\\"6\\\">6</button>\\n            <button class=\\\"calc-btn orange\\\" data-action=\\\"operator\\\" data-value=\\\"subtract\\\">-</button>\\n\\n            <button class=\\\"calc-btn\\\" data-action=\\\"number\\\" data-value=\\\"1\\\">1</button>\\n            <button class=\\\"calc-btn\\\" data-action=\\\"number\\\" data-value=\\\"2\\\">2</button>\\n            <button class=\\\"calc-btn\\\" data-action=\\\"number\\\" data-value=\\\"3\\\">3</button>\\n            <button class=\\\"calc-btn orange\\\" data-action=\\\"operator\\\" data-value=\\\"add\\\">+</button>\\n\\n            <button class=\\\"calc-btn col-span-2 text-left pl-8\\\" data-action=\\\"number\\\" data-value=\\\"0\\\">0</button>\\n            <button class=\\\"calc-btn\\\" data-action=\\\"decimal\\\">,</button>\\n            <button class=\\\"calc-btn orange\\\" data-action=\\\"calculate\\\">=</button>\\n        </div>\\n    </div>\\n    <script>\\n    const display = document.getElementById('display')\\n    const buttons = document.querySelector('.grid')\\n\\n    let displayValue = '0'\\n    let firstOperand = null\\n    let operator = null\\n    let waitingForSecondOperand = false\\n\\n    function updateDisplay() {\\n        display.textContent = displayValue.replace('.', ',')\\n        if (displayValue.length > 9) {\\n            display.style.fontSize = '4rem'\\n        } else {\\n            display.style.fontSize = '5rem'\\n        }\\n    }\\n\\n    buttons.addEventListener('click', (event) => {\\n        const { target } = event\\n        if (!target.matches('button')) return\\n\\n        const { action, value } = target.dataset\\n\\n        switch (action) {\\n            case 'number':\\n                if (waitingForSecondOperand) {\\n                    displayValue = value\\n                    waitingForSecondOperand = false\\n                } else {\\n                    displayValue = displayValue === '0' ? value : displayValue + value\\n                }\\n                break\\n            case 'decimal':\\n                if (!displayValue.includes('.')) {\\n                    displayValue += '.'\\n                }\\n                break\\n            case 'operator':\\n                handleOperator(value)\\n                break\\n            case 'calculate':\\n                if (operator && firstOperand !== null) {\\n                    const result = calculate(firstOperand, parseFloat(displayValue), operator)\\n                    displayValue = String(result)\\n                    firstOperand = null\\n                    operator = null\\n                }\\n                break\\n            case 'clear':\\n                displayValue = '0'\\n                firstOperand = null\\n                operator = null\\n                waitingForSecondOperand = false\\n                break\\n            case 'negate':\\n                displayValue = String(parseFloat(displayValue) * -1)\\n                break\\n            case 'percentage':\\n                displayValue = String(parseFloat(displayValue) / 100)\\n                break\\n        }\\n        updateDisplay()\\n    })\\n\\n    function handleOperator(nextOperator) {\\n        const inputValue = parseFloat(displayValue)\\n        if (operator && waitingForSecondOperand) {\\n            operator = nextOperator\\n            return\\n        }\\n        if (firstOperand === null) {\\n            firstOperand = inputValue\\n        } else if (operator) {\\n            const result = calculate(firstOperand, inputValue, operator)\\n            displayValue = String(result)\\n            firstOperand = result\\n        }\\n        waitingForSecondOperand = true\\n        operator = nextOperator\\n    }\\n    \\n    function calculate(first, second, op) {\\n        if (op === 'add') return first + second\\n        if (op === 'subtract') return first - second\\n        if (op === 'multiply') return first * second\\n        if (op === 'divide') return first / second\\n        return second\\n    }\\n\\n    updateDisplay()\\n    </script>\\n</body>\\n</html>\\n"
  },
  {
    "name": "Fotos",
    "description": "Explora y revive tus recuerdos.",
    "content": "<!DOCTYPE html>\\n<html lang=\\\"es\\\">\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n    <title>Fotos</title>\\n    <script src=\\\"https://cdn.tailwindcss.com\\\"></script>\\n    <link rel=\\\"preconnect\\\" href=\\\"https://fonts.googleapis.com\\\">\\n    <link rel=\\\"preconnect\\\" href=\\\"https://fonts.gstatic.com\\\" crossorigin>\\n    <link href=\\\"https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap\\\" rel=\\\"stylesheet\\\">\\n    <style>\\n        body { font-family: 'Inter', -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif; }\\n        .hidden { display: none; }\\n    </style>\\n</head>\\n<body class=\\\"bg-white\\\">\\n    <div class=\\\"w-full max-w-7xl mx-auto\\\">\\n        <!-- Cabecera -->\\n        <header class=\\\"py-4 px-6 border-b border-gray-200 sticky top-0 bg-white/80 backdrop-blur-sm z-10 flex justify-between items-center\\\">\\n            <h1 class=\\\"text-3xl font-bold text-gray-900\\\">Fotos</h1>\\n            <button id=\\\"open-camera-btn\\\" class=\\\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded-lg\\\">\\n                Tomar Foto\\n            </button>\\n        </header>\\n\\n        <!-- Galería -->\\n        <main class=\\\"p-6\\\">\\n            <div>\\n                <h2 class=\\\"text-xl font-semibold text-gray-800 mb-3\\\">Tus Fotos</h2>\\n                <div id=\\\"gallery\\\" class=\\\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-4\\\">\\n                    <!-- Las fotos guardadas aparecerán aquí -->\\n                </div>\\n                <p id=\\\"no-photos-msg\\\" class=\\\"text-gray-500 text-center mt-8\\\">No has guardado ninguna foto todavía. ¡Usa la cámara!</p>\\n            </div>\\n        </main>\\n    </div>\\n\\n    <!-- Modal de la Cámara -->\\n    <div id=\\\"camera-modal\\\" class=\\\"hidden fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\\\">\\n        <div class=\\\"bg-white rounded-lg p-6 max-w-3xl w-full\\\">\\n            <h2 class=\\\"text-2xl font-bold mb-4\\\">Cámara</h2>\\n            <div id=\\\"camera-container\\\" class=\\\"relative\\\">\\n                <video id=\\\"camera-feed\\\" class=\\\"w-full h-auto rounded-lg bg-gray-900\\\" autoplay playsinline></video>\\n                <canvas id=\\\"photo-canvas\\\" class=\\\"hidden\\\"></canvas>\\n                <p id=\\\"camera-error\\\" class=\\\"hidden text-red-500 text-center my-4\\\">No se pudo acceder a la cámara. Revisa los permisos.</p>\\n            </div>\\n            <div class=\\\"mt-6 flex justify-center space-x-4\\\">\\n                <button id=\\\"capture-btn\\\" class=\\\"bg-blue-500 text-white rounded-full w-20 h-20 flex items-center justify-center text-4xl shadow-lg focus:outline-none ring-4 ring-white ring-offset-2 ring-offset-gray-800\\\">\\n                    <svg class=\\\"w-10 h-10\\\" fill=\\\"currentColor\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 8a4 4 0 118 0 4 4 0 01-8 0zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\\\" clip-rule=\\\"evenodd\\\"></path></svg>\\n                </button>\\n                <button id=\\\"close-camera-btn\\\" class=\\\"absolute top-4 right-4 bg-gray-200 text-gray-800 rounded-full w-10 h-10 flex items-center justify-center\\\">\\n                    <svg class=\\\"w-6 h-6\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\" d=\\\"M6 18L18 6M6 6l12 12\\\"></path></svg>\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <script>\\n    const openCameraBtn = document.getElementById('open-camera-btn')\\n    const closeCameraBtn = document.getElementById('close-camera-btn')\\n    const captureBtn = document.getElementById('capture-btn')\\n    const cameraModal = document.getElementById('camera-modal')\\n    const cameraFeed = document.getElementById('camera-feed')\\n    const photoCanvas = document.getElementById('photo-canvas')\\n    const cameraError = document.getElementById('camera-error')\\n    const gallery = document.getElementById('gallery')\\n    const noPhotosMsg = document.getElementById('no-photos-msg')\\n    let stream = null\\n\\n    const STORAGE_KEY = 'photos-app-gallery'\\n\\n    // Cargar fotos desde localStorage\\n    function loadPhotos() {\\n        const photos = JSON.parse(localStorage.getItem(STORAGE_KEY) || '[]')\\n        gallery.innerHTML = ''\\n        if (photos.length > 0) {\\n            noPhotosMsg.classList.add('hidden')\\n            photos.forEach(photoDataUrl => {\\n                const img = document.createElement('img')\\n                img.src = photoDataUrl\\n                img.className = \\\"rounded-lg aspect-square object-cover cursor-pointer hover:opacity-90 transition-opacity\\\"\\n                gallery.appendChild(img)\\n            })\\n        } else {\\n            noPhotosMsg.classList.remove('hidden')\\n        }\\n    }\\n\\n    // Guardar una foto\\n    function savePhoto(dataUrl) {\\n        const photos = JSON.parse(localStorage.getItem(STORAGE_KEY) || '[]')\\n        photos.unshift(dataUrl) // Añadir al principio\\n        localStorage.setItem(STORAGE_KEY, JSON.stringify(photos))\\n        loadPhotos()\\n    }\\n    \\n    // Abrir la cámara\\n    async function startCamera() {\\n        try {\\n            stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: false })\\n            cameraFeed.srcObject = stream\\n            cameraModal.classList.remove('hidden')\\n            cameraError.classList.add('hidden')\\n        } catch (err) {\\n            console.error(\\\"Error al acceder a la cámara: \\\", err)\\n            cameraError.classList.remove('hidden')\\n        }\\n    }\\n\\n    // Cerrar la cámara\\n    function stopCamera() {\\n        if (stream) {\\n            stream.getTracks().forEach(track => track.stop())\\n        }\\n        cameraModal.classList.add('hidden')\\n    }\\n\\n    // Capturar foto\\n    captureBtn.addEventListener('click', () => {\\n        const context = photoCanvas.getContext('2d')\\n        photoCanvas.width = cameraFeed.videoWidth\\n        photoCanvas.height = cameraFeed.videoHeight\\n        context.drawImage(cameraFeed, 0, 0, photoCanvas.width, photoCanvas.height)\\n        \\n        const dataUrl = photoCanvas.toDataURL('image/png')\\n        savePhoto(dataUrl)\\n        stopCamera()\\n    })\\n\\n    openCameraBtn.addEventListener('click', startCamera)\\n    closeCameraBtn.addEventListener('click', stopCamera)\\n\\n    // Carga inicial de fotos\\n    loadPhotos()\\n    </script>\\n</body>\\n</html>\\n"
  }
]
